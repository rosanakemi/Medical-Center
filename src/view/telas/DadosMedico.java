/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.telas;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Medico;
import services.MedicoServico;

/**
 *
 * @author zanna
 */
public class DadosMedico extends javax.swing.JFrame {

    private Medico medico;

    /**
     * Creates new form CadastroPaciente
     * @param medico
     */
    public DadosMedico(Medico medico) {
        initComponents();
        this.medico = medico;

        if (medico != null) {
            carregarDadoNaTela();
        }
    }

    public void carregarDadoNaTela() {
        botao_cadastrar.setText("Atualizar");

        campo_nome.setText(this.medico.getNome());
        campo_cpf.setText(this.medico.getCpf());

        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        campo_datanascimento.setText(dateFormat.format(this.medico.getData_de_nascimento()));

        campo_crm.setText(this.medico.getCRM());

        combo_especialidade.setSelectedItem(this.medico.getEspecialidades());
        combo_situacao.setSelectedItem(this.medico.getStatus());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        botao_cadastrar = new javax.swing.JButton();
        botao_cancelar = new javax.swing.JButton();
        campo_nome = new javax.swing.JTextField();
        campo_cpf = new javax.swing.JTextField();
        campo_datanascimento = new javax.swing.JTextField();
        campo_crm = new javax.swing.JTextField();
        combo_situacao = new javax.swing.JComboBox<>();
        combo_especialidade = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do Medico", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 18), new java.awt.Color(51, 51, 51))); // NOI18N

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Nome Completo:");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("CPF:");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Data de Nascimento:");

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("CRM");

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Especialidade:");

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Situação:");

        botao_cadastrar.setBackground(new java.awt.Color(0, 0, 204));
        botao_cadastrar.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        botao_cadastrar.setForeground(new java.awt.Color(255, 255, 255));
        botao_cadastrar.setText("Cadastrar");
        botao_cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_cadastrarActionPerformed(evt);
            }
        });

        botao_cancelar.setBackground(new java.awt.Color(51, 0, 204));
        botao_cancelar.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        botao_cancelar.setForeground(new java.awt.Color(255, 255, 255));
        botao_cancelar.setText("Cancelar");
        botao_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_cancelarActionPerformed(evt);
            }
        });

        campo_nome.setBackground(new java.awt.Color(255, 255, 255));
        campo_nome.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        campo_nome.setForeground(new java.awt.Color(51, 51, 51));

        campo_cpf.setBackground(new java.awt.Color(255, 255, 255));
        campo_cpf.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        campo_cpf.setForeground(new java.awt.Color(51, 51, 51));

        campo_datanascimento.setBackground(new java.awt.Color(255, 255, 255));
        campo_datanascimento.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        campo_datanascimento.setForeground(new java.awt.Color(51, 51, 51));

        campo_crm.setBackground(new java.awt.Color(255, 255, 255));
        campo_crm.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        campo_crm.setForeground(new java.awt.Color(51, 51, 51));

        combo_situacao.setBackground(new java.awt.Color(255, 255, 255));
        combo_situacao.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        combo_situacao.setForeground(new java.awt.Color(51, 51, 51));
        combo_situacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ativo", "Inativo", " " }));

        combo_especialidade.setBackground(new java.awt.Color(255, 255, 255));
        combo_especialidade.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        combo_especialidade.setForeground(new java.awt.Color(51, 51, 51));
        combo_especialidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Clínico Geral", "Ginecologista", "Obstetra", "Dermatologista" }));
        combo_especialidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_especialidadeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botao_cadastrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botao_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel9)
                            .addComponent(jLabel6))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(combo_especialidade, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 211, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campo_nome)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(campo_datanascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(campo_crm, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                                                .addComponent(campo_cpf, javax.swing.GroupLayout.Alignment.LEADING))
                                            .addComponent(combo_situacao, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 174, Short.MAX_VALUE)))
                                .addGap(51, 51, 51))))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(campo_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(campo_cpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(campo_datanascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(campo_crm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(combo_especialidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 189, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(combo_situacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botao_cadastrar)
                    .addComponent(botao_cancelar))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botao_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_cancelarActionPerformed
        this.dispose();
        // Instancia e exibe a tela principal
        ListaMedico view = new ListaMedico();
        view.setVisible(true);
    }//GEN-LAST:event_botao_cancelarActionPerformed

    private void botao_cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_cadastrarActionPerformed
        {
            // Verifica se o campo de login está vazio
            if (campo_nome.getText().isEmpty()) {
                // Exibe uma mensagem de alerta informando que o campo de login está vazio
                JOptionPane.showMessageDialog(null, "Campo nome vazio");
                // Define o foco no campo de nome para o usuário preencher
                campo_nome.requestFocus();
                return; // Sai do método, pois a validação falhou
            }
            if (campo_cpf.getText().isEmpty()) {
                // Exibe uma mensagem de alerta informando que o campo de login está vazio
                JOptionPane.showMessageDialog(null, "Campo CPF vazio");
                // Define o foco no campo de CPF para o usuário preencher
                campo_cpf.requestFocus();
                return; // Sai do método, pois a validação falhou
            }

            if (campo_datanascimento.getText().isEmpty()) {
                // Exibe uma mensagem de alerta informando que o campo  está vazio
                JOptionPane.showMessageDialog(null, "Campo data de Nascimento vazio");
                // Define o foco no campo de dataNascimento para o usuário preencher
                campo_datanascimento.requestFocus();
                return; // Sai do método, pois a validação falhou
            }

            if (campo_crm.getText().isEmpty()) {
                // Exibe uma mensagem de alerta informando que o campo está vazio
                JOptionPane.showMessageDialog(null, "Campo CRM vazio");
                // Define o foco no campo de cartaoSus para o usuário preencher
                campo_crm.requestFocus();
                return; // Sai do método, pois a validação falhou
            }

            // Chama o método de autenticação passando os valores dos campos de login e senha
            if ((!campo_nome.getText().isEmpty()) && (!campo_cpf.getText().isEmpty()) && (!campo_datanascimento.getText().isEmpty()) && (!campo_crm.getText().isEmpty())) {
                // Se a autenticação for bem-sucedida, exibe uma mensagem informando que o usuário está logado
                MedicoServico servico = new MedicoServico();

                try {

                    if (this.medico == null) {
                        if (servico.cadastrar(campo_nome.getText(), campo_cpf.getText(), campo_datanascimento.getText(), campo_crm.getText(), combo_especialidade.getSelectedItem().toString(), combo_situacao.getSelectedItem().toString())) {
                            JOptionPane.showMessageDialog(null, "Medico cadastrado com sucesso");
                            this.dispose();
                            ListaMedico view = new ListaMedico();
                            view.setVisible(true);
                        } else {
                            JOptionPane.showMessageDialog(null, "Medico com idade acima de 120 anos.");
                        }
                    } else {
                        if (servico.atualizar(this.medico.getId(), campo_nome.getText(), campo_cpf.getText(), campo_datanascimento.getText(), campo_crm.getText(), combo_especialidade.getSelectedItem().toString(), combo_situacao.getSelectedItem().toString())) {
                            JOptionPane.showMessageDialog(null, "Medico atualizado com sucesso");
                            this.dispose();
                            ListaMedico view = new ListaMedico();
                            view.setVisible(true);
                        } else {
                            JOptionPane.showMessageDialog(null, "Medico com idade acima de 120 anos.");
                        }
                    }
                } catch (ParseException ex) {
                    Logger.getLogger(DadosPaciente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }//GEN-LAST:event_botao_cadastrarActionPerformed

    private void combo_especialidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_especialidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_especialidadeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DadosMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DadosMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DadosMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DadosMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DadosMedico(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botao_cadastrar;
    private javax.swing.JButton botao_cancelar;
    private javax.swing.JTextField campo_cpf;
    private javax.swing.JTextField campo_crm;
    private javax.swing.JTextField campo_datanascimento;
    private javax.swing.JTextField campo_nome;
    private javax.swing.JComboBox<String> combo_especialidade;
    private javax.swing.JComboBox<String> combo_situacao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
